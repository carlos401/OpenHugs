import java.util.BitSet;

COMPILER OpenHugs

/*-------------------------------------------------------------------------*/

CHARACTERS
  tab           = '\u0009'. /*  9 = tabulator */
  lf            = '\u000a'. /* 10 = line feed */
  cr            = '\u000d'. /* 13 = carriage return */

  digit         = "0123456789".
  letter        = 'A' .. 'Z' + 'a' .. 'z' + '_' + '$'.

  stringChar    = ANY - "\"" - '\\' - cr - lf.

TOKENS
  
  variableName = 'a'..'z' {'a'..'z'}.
  
  className = 'A'..'Z' {'a'..'z'}.
  
  /*-------------------------------------------------------------------------*/
  
  number = digit { digit } ['.' digit { digit } ].
  
  /*-------------------------------------------------------------------------*/

  stringLit = 
  "\"" { stringChar
       | "\\" ( "b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\" )
       } 
  "\"".
  
  /*----- keyword names needed in LL(1) resolvers -----*/


  
  /*----- operators and special characters needed in LL(1) resolvers --------------*/
  comma   = ",".
  dec     = "--".
  dot     = ".".
  inc     = "++".
  lbrace  = "{".
  lbrack  = "[".
  lpar    = "(".
  minus   = "-".
  not     = "!".
  plus    = "+".
  rbrace  = "}".
  rbrack  = "]".
  rpar    = ")".
  tilde   = "~".
  
  typeName  = ( "boolean" | "byte" | "char" ).


COMMENTS FROM ";;" TO ";;"
COMMENTS FROM ";" TO lf

IGNORE lf + cr + tab

/*---------------------------------------------------------------------------*/

PRODUCTIONS

OpenHugs = {import} class {class}.

import = "INCORPORAR" className.

class = "CLASE" className [ ":" typeName ] block.

function = "FUNCION" variableName lpar [typeName variableName {comma typeName variableName}] rpar block.

variableDeclaration = typeName variableName.

assignment = variableName "::=" expresion.

Initialization = typeName variableName "::=" expresion.

whileLoop = "MIENTRAS" lpar expresion rpar block.

ifStatement = "SI" lpar expresion rpar block [ "SINO" block ].

expresion = 
  ( lpar expresion rpar
  | dec expresion
  | inc expresion
  | expresion minus expresion
  | expresion plus expresion
  | expresion "*" expresion
  | expresion "/" expresion
  | function lpar [variableName] { comma variableName} rpar
  ).

block = { expresion | whileLoop | ifStatement | assignment | variableDeclaration | Initialization }.

END OpenHugs.